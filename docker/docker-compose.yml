services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: testcase-postgres
    environment:
      POSTGRES_DB: testcasemanager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - ../database/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - testcase-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: testcase-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: testcasemanager
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      UPLOAD_DIR: uploads
      MAX_FILE_SIZE: 10485760
    ports:
      - "3001:3001"
    volumes:
      - ../backend:/app
      - /app/node_modules
      - ../backend/uploads:/app/uploads
      - ../database:/app/database
    depends_on:
      - postgres
    networks:
      - testcase-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: testcase-frontend
    environment:
      # Remove hardcoded localhost - let the frontend detect the correct URL
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - testcase-network
    restart: unless-stopped

networks:
  testcase-network:
    driver: bridge 